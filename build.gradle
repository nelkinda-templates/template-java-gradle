buildscript {
    configurations.maybeCreate('pitest')
    dependencies {
        pitest 'org.pitest:pitest-junit5-plugin:0.12'
    }
}

plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'name.remal.sonarlint' version '1.0.178'
    id 'org.sonarqube' version '2.8'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.4.7'
    id 'com.github.ben-manes.versions' version '0.28.0'
}

group 'com.nelkinda.templates' // Change this
version '0.0.1-SNAPSHOT'

sourceCompatibility = 13

repositories {
    mavenCentral()
}

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:8.30'

    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'

    testImplementation 'io.cucumber:cucumber-java:5.5.0'
    testImplementation 'io.cucumber:cucumber-junit:5.5.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:5.5.0'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testImplementation 'org.junit.platform:junit-platform-commons:1.6.0'
    testImplementation 'org.junit.platform:junit-platform-engine:1.6.0'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.6.0'
}

checkstyleMain {
    configFile = file("config/checkstyle/checkstyleMain.xml")
    maxWarnings = 0
}

checkstyleTest {
    configFile = file("config/checkstyle/checkstyleTest.xml")
    maxWarnings = 0
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

pitest {
    targetClasses = ['com.pubport.*']
    pitestVersion = '1.5.0'
    timestampedReports = false
    testPlugin = 'junit5'
    outputFormats = ['XML', 'HTML']
    mutators = ['ALL']
    mutationThreshold = 100
    coverageThreshold = 100
}

pmd {
    ruleSets = []
    consoleOutput = true
    dependencies {
        pmd 'net.sourceforge.pmd:pmd:6.22.0'
        pmd 'net.sourceforge.pmd:pmd-core:6.22.0'
        pmd 'net.sourceforge.pmd:pmd-java:6.22.0'
    }
}

pmdMain {
    ruleSetFiles = files("config/pmd/pmdMain.xml")
}

pmdTest {
    ruleSetFiles = files("config/pmd/pmdTest.xml")
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion "6.2.2"
    jarFile ".gradle/wrapper/gradle-wrapper.jar"
}
